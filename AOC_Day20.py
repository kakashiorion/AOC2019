master=["                                     A   B   M             Q   B           B     L   F                                           ",
"                                     A   F   W             R   K           U     I   B                                           ",
"  ###################################.###.###.#############.###.###########.#####.###.#########################################  ",
"  #.#...#...............#.#.#.#.......#.....#.#...#.......#.#.#...#.#...#.#.#.....#.......#...........#...#.#...#.......#.#.#.#  ",
"  #.#.#######.#.###.#.#.#.#.#.#.#.###.#.###.#.#.#.###.###.#.#.#.###.#.###.#.###.#.###.###.#.#######.#.###.#.#.#####.#####.#.#.#  ",
"  #.#.#.......#.#.#.#.#.#.......#.#.....#...#...#...#.#.......#.....#.#.#...#...#.#...#.......#...#.#.#...#...#.#.......#.#.#.#  ",
"  #.#.###########.#####.#.#####.###.#####.#.###.###.#.#########.#####.#.#.###.#####.#.#.#######.#########.#.###.#.###.###.#.#.#  ",
"  #.#.....#...#...#.#.#.......#.#...#.....#.#.....#.#.#.....#...#.#.......#...#...#.#.#...#.#.#...#...#.#...........#.#...#.#.#  ",
"  #.#####.###.###.#.#.#.###############.###########.#.#.###.#.###.#.###.#####.#.#######.###.#.#.###.###.#.###.#.#######.###.#.#  ",
"  #.....#...#.............#.#.#...#.......#.....#...#...#.#.#.#...#...#.....#.......#...........#.#.#.....#.#.#...#.....#.....#  ",
"  ###.###.###########.#.###.#.#.#######.###.#####.###.###.#.#.#.#.#######.#.#.#.#####.#.#.#####.#.#.#.#####.#.#######.#.#.#.###  ",
"  #.#.#.#.#...#.#.#...#.#.......#.#.#.......#.......#...#.#.#...#.#.....#.#.#.#.#.#.#.#.#.#.#.#...........#.#.#.#.....#.#.#...#  ",
"  #.#.#.#.#.#.#.#.###########.#.#.#.#######.#.#############.#.#######.#.###.#.###.#.#####.#.#.#.#######.###.###.###.#####.#####  ",
"  #.........#.................#.....#.#.#...#.........#.#.#.#.#.#.....#...#.#.#...#.#.........#...#...................#.#.....#  ",
"  ###.###.###.#.#.#.#####.#.#####.###.#.###.#######.###.#.#.#.#.#####.###.#.#.#.###.#.###.#.###.#.#####.#.###.#.#.#####.#.#####  ",
"  #...#...#.#.#.#.#...#...#.#.#...........#...#...#.#.......#...#.#.#.#.#.#.#...#.#...#...#.#.#.#.#...#.#...#.#.#...#.#...#...#  ",
"  ###.#.#.#.#.###.#.###.#.###.#######.###.#.###.#.#.#.#########.#.#.#.#.#.#.###.#.#.###.#.###.#######.#.#.#.###.###.#.###.#.#.#  ",
"  #.#.#.#.#.#.#...#.#.#.#.#.#.........#.......#.#...#.#.....#.....#.#.#.....#...#.....#.#.............#.#.#...#.#.#.#.#.....#.#  ",
"  #.#######.###.#.#.#.#####.#####.#.#.#######.#.###.#.#.###.#.#####.#.#######.#####.###.###.###.#.###.#########.#.#.#.#####.###  ",
"  #.#.#...#...#.#.#.#.#...........#.#.......#.#...#.#...#.#.#.#...#.........#.#.#.....#.#.....#.#.#.#...#.#.#.#...#.#.#.....#.#  ",
"  #.#.###.#.#.#######.###.###.#.#.###.#.###########.#.#####.#.###.#.###.#.###.#.###.###.###.#.#####.#.###.#.#.###.#.#.#.#.###.#  ",
"  #.#...#...#.#.............#.#.#.#.#.#...#...#.#.#.#...#...#.....#.#...#.#.....#.....#.#...#.#.#...#...........#.#.#...#.#...#  ",
"  #.###.###.#######.###.###########.###.###.###.#.#.#.#####.###.#####.#####.###.#.#.#######.###.#.###.#.#####.#.#########.#.#.#  ",
"  #...#...#.#.#.#.#.#.#.#.#...#...#.........#.#.....#...#...#.#.....#.....#.#...#.#.#...#...........#.#.#.#...#.#.#...#.....#.#  ",
"  ###.#.###.#.#.#.###.#.#.#.#.###.###.###.###.#.###########.#.###.#####.#####.#.###.#.#######.###.#.#####.#######.#.#####.#####  ",
"  #...#...#.#.#.........#.#.#.#.......#.....#.#.......#.....#.....#.#.....#...#.#...........#.#.#.#.#...........#.....#.#...#.#  ",
"  ###.###.#.#.#######.#.#.#.#####.#####.#.#.#.#####.#######.#.#.###.#.#.#.#.#.#####.#.#########.###.###.#.#####.#####.#.#.###.#  ",
"  #...#...#...#.....#.#.#.#...#.#.#.#...#.#.#...........#...#.#...#...#.#.#.#.....#.#.#.....#.#...#.#.#.#.....#.#.#.#.#.......#  ",
"  ###.###.#.#####.###.###.###.#.###.#####.###.#####.#######.#.#######.#######.#####.###.#####.#.#.###.#.#########.#.#.#####.###  ",
"  #.....#.#...#.#...#.#.............#.....#.....#.#.#.#.....#.....#.#...#.#.....#...#.#...#.....#.#.#.#...#...#.#.....#.....#.#  ",
"  #.#.###.#.###.###.###.###.###.###.#.#########.#.###.#####.#.#####.#.###.#####.###.#.#.#####.#.###.#.#.#####.#.#####.###.###.#  ",
"  #.#...#.#.#.#...#...#.#...#.#.#.....#.#...#.....#.#.#...#.#...#...#.#...#.....#.......#.....#.#.......#...#...#...#.#.....#.#  ",
"  #.#.###.#.#.#.###.#########.#####.#.#.#.#######.#.#.###.#.#.#####.#.###.###.#####.###.#.#############.#.###.#####.#.###.###.#  ",
"  #.#...#.#.......#.#.#.#...#.....#.#...........#.....#.....#.......#.......#...#...#.....#.......#.#...#.#.....#.#...#...#...#  ",
"  #####.#.#.#.###.#.#.#.###.###.###########.#######.#####.#########.#####.###.#########.#########.#.###.#.#.###.#.#.#.#.#####.#  ",
"  #.#...#.#.#.#.#.#...#...#.#.#.#.#        R       K     X         O     W   Q         H      #...#.......#.#.#...#.#.#.#.....#  ",
"  #.###.#.#####.#.###.#.###.#.#.#.#        Y       W     G         I     I   R         B      ###.###.###.###.###.#.###.#####.#  ",
"XG....#.......#.......#.......#...#                                                           #.........#.#...#.........#.....#  ",
"  ###.#.#.###.###.#.#.###.###.#.#.#                                                           #####.#.#####.###.#.#.###.#.#.#.#  ",
"  #...#.#.#.......#.#.....#.#.#.#.#                                                           #.#.#.#.#.#.#.....#.#.#.....#.#..QS",
"  ###.#.#####.###.#.###.#.#.#.#.#.#                                                           #.#.###.#.#.#####.#####.###.###.#  ",
"  #...#.....#...#.#.#.#.#.#...#.#.#                                                           #.#.#...#...#.#.......#...#...#.#  ",
"  ###.#.#########.###.#####.###.#.#                                                           #.#.###.#.###.###.#.#.#.###.#.###  ",
"  #.............#...#...#.......#..BF                                                       FB..................#.#.#...#.#...#  ",
"  #########.#########.#############                                                           ###############.#.#######.#######  ",
"  #...#.#.#.#.#...........#.#.....#                                                           #...#.......#.#.#.#...#...#.#...#  ",
"  #.#.#.#.#.#.#.#####.###.#.#.#.###                                                           #.#.#.#####.#.#####.#######.###.#  ",
"RY..#.#...#.#.#.#...#.#.....#.#...#                                                           #.#.#.#...#...#.....#.....#......LY",
"  #.#.#.#####.###.###.###.###.###.#                                                           #.#.#.###.###.#####.#.#.###.#####  ",
"  #.#.....#.#.........#...#...#...#                                                         WH..#.#.......#.#.#.....#...#.....#  ",
"  ###.#####.#####.#####.#.#.###.#.#                                                           #.#.#######.#.#.#.###.#########.#  ",
"  #.#...............#.#.#.....#.#..LY                                                         #.#.........#.....#.............#  ",
"  #.#################.#####.#######                                                           #############################.###  ",
"WI..........#.............#.#.....#                                                           #.....#...#.#...........#...#...#  ",
"  #.###.#.#.#.#.#.###.#######.#.#.#                                                           #.###.#.#.#.#.#####.###.###.#####  ",
"  #...#.#.#.#.#.#.#.#.#.#.....#.#.#                                                           #.#...#.#...#.#.#...#.#.#.#.....#  ",
"  #########.#.#######.#.#####.###.#                                                           #.#.###.###.#.#.#####.#.#.###.###  ",
"  #.#.#.#.#.......#...#.#.#.#.#...#                                                         NK..#.......#.......#.......#.....#  ",
"  #.#.#.#.#.###.###.###.#.#.#.###.#                                                           ###.###.###############.#.###.#.#  ",
"  #...........#...#.............#..IM                                                         #.#.#.#.#...#.#...#...#.#.....#..DK",
"  ###.#.###.#######.###############                                                           #.###.###.###.#.#####.###########  ",
"  #...#...#.#.....#.#.......#.....#                                                           #.....#...#.........#...#.......#  ",
"  #####.#######.#####.#####.#.#.###                                                           #.###.#.#.###.#.#####.###.#####.#  ",
"  #...#.#...#.....#...#.....#.#...#                                                           #...#...#.....#...#.......#.#...#  ",
"  ###.#.###.###.#####.###.###.###.#                                                           #.###.#.###.#.###.#.#######.#.###  ",
"  #.#.#.#...#...#.......#...#...#..DS                                                         #.#...#.#...#...#.....#.#...#.#.#  ",
"  #.#.###.#.#.#.#.#.#.#####.###.###                                                           #.#.#.#######.###.#.###.###.#.#.#  ",
"OI........#...#...#.#.#.........#.#                                                         LI..#.#...#.#.#...#.#.#.#.#........JN",
"  #######.#.###.###############.#.#                                                           #########.#.#######.#.#.#######.#  ",
"  #.#.#...#...#...#.....#.....#...#                                                         BK..#.....#.......#.#.#.........#.#  ",
"  #.#.###.###########.#.#.###.#####                                                           #.#.#.#.#.#.#.#.#.###.#####.#####  ",
"OZ....#...#.........#.#...#...#.#.#                                                           #.#.#.#...#.#.#.........#.....#..HB",
"  #.###########.#####.#####.###.#.#                                                           #.###.#########.#.###.#####.###.#  ",
"  #.#.#.....#.......#.....#...#....QS                                                         #...#.......#.#.#...#.#.......#.#  ",
"  #.#.#.###.#####.#.#.#######.#.###                                                           #.#.#####.###.#######.#######.#.#  ",
"  #.....#.........#...#.....#.....#                                                           #.#.......#.#...#...#.#.#.#.....#  ",
"  #.#####################.#########                                                           ###########.#.#####.###.#.#######  ",
"  #.#.................#.#.........#                                                           #.#...............#...#.........#  ",
"  ###.#.#.#####.#####.#.###.#####.#                                                           #.#.#.###.###.#.#.#.#.#.#.#######  ",
"  #.#.#.#.....#.#...........#.....#                                                           #...#...#.#...#.#.#.#...#...#.#.#  ",
"  #.#.#######.#.#.###.#.#.###.#####                                                           #.###.###.#######.#.#####.###.#.#  ",
"NK........#...#.#...#.#.#.#.......#                                                           #.#.#...#.#...#.....#.....#...#..GI",
"  #####.#.###.###.#.#.#.#.#.#.#.#.#                                                           #.#.#.###.#.###.#.###.#####.#.#.#  ",
"  #...#.#.#.#...#.#.#.#.#.#.#.#.#..NL                                                       OH....#...#.#.....#.#.........#...#  ",
"  ###.#.###.###.#.###.###.###.#.###                                                           #.#.#.#######.#.#####.#.#####.#.#  ",
"  #.........#...#.#...#.#.#...#...#                                                           #.#.#.....#...#...#...#.....#.#.#  ",
"  #.#.###.#####.#.#####.#.#####.#.#        G       M       B O         D           Q   J M    ###.#.#.#######.#.###.#.#.#.#.###  ",
"  #.#.#...#...#.#.#...#...#...#.#.#        I       Y       U Z         K           D   N W    #.#.#.#.#.......#.#...#.#.#.#...#  ",
"  #.#####.#.#######.###.###.#####.#########.#######.#######.#.#########.###########.###.#.#####.#.###.###.#####.#.#.#####.#.#.#  ",
"  #...#.......#...#.......#.#...#.#...........#.....#.....#.#.....#.........#.#.....#.......#.......#...#.....#.#.#...#...#.#.#  ",
"  #.#.###.#.#####.#.#.#####.###.#####.#.#.#########.#.###.#.###.###.#.###.###.###.#####.#.#####.#################.#.###########  ",
"  #.#.#...#...#.....#...#.....#.#.#.#.#.#.....#.....#.#.....#.....#.#...#.#.#...#.#.....#...#.#.#.#.#.............#...........#  ",
"  #######.#.###.#####.#.#.###.#.#.#.#####.#.#######.#.#########.#.###.#.#.#.#.###.###.#.#####.###.#.###########.###.###########  ",
"  #.......#...#.#.....#.#.#.#.#.#.#.......#.#.#...#.#.........#.#...#.#.#.#.....#...#.#.....#.#.#.......#.#.#.#...#...#...#...#  ",
"  ###.###.#.#.#.###.#.#.###.#.#.#.###.#.#.#.#.#.###.#######.#.#####.###.###.#.#####.#.#######.#.#.#######.#.#.#.###.#####.#.###  ",
"  #.....#.#.#.#.#...#.#.#.#.......#.#.#.#.#.#.......#.#.....#.#.....#.#.#.#.#.......#...............#...........#.............#  ",
"  ###.###.#.###.###.#####.#.#.#.#.#.#######.#####.#.#.#####.#####.###.#.#.###.#######.#.#####.###.#######.#####.#####.###.#####  ",
"  #...#.#.#.#...#.#.#.......#.#.#.....#.......#.#.#...#.#.....#.#.#.....#...#.......#.#...#.....#.....#...#...#.#.#.#.#.......#  ",
"  #.###.#.#######.#####.#.#.#####.#.#######.###.###.#.#.###.#.#.#.###.#.#.#.###.###.#.#.###.###########.#.###.#.#.#.#.#.#.#.###  ",
"  #.#.#.#.#.#.........#.#.#.#.#...#...#.#.#...#.....#.#.....#.#.....#.#...#.#...#...#.#.#.#.#.#.......#.#.#.#.......#.#.#.#.#.#  ",
"  ###.#.###.#######.#########.#######.#.#.#.###.###.#####.#.#####.###.###.#.###.###.#.###.###.#.###########.#.#.#.###.###.###.#  ",
"  #...#.#.............#.#.#...#.......#.#.....#.#.....#...#...#.....#.#.#.#...#...#.#...#.#.#.#.............#.#.#...#.#.#.....#  ",
"  ###.#.###.###.#.###.#.#.###.#.###.#.#.###.#####.#####.###.#######.###.###.#######.#.###.#.#.#.#.#.#######.#####.###.#.#.#####  ",
"  #.........#.#.#.#.#...........#...#.....#.#.#.#.....#.#.#.#.........#.........#.#.#.#.#.#.....#.#...#.#.......#...#.#.......#  ",
"  ###.###.###.#.#.#.#.#########.#.#.#.#####.#.#.#.###.###.#.#######.#####.#.###.#.#.#.#.#.#.#.#.#######.#######.###.###.###.#.#  ",
"  #.#.#...#...#.#.#.#.#...#...#.#.#.#...#...#.......#.#.#.#.#.#.#.#.....#.#...#.#...#.#.....#.#...#.#.#.......#...#.#.....#.#.#  ",
"  #.#########.#####.#####.#.#########.#.#.#.#.#####.###.#.#.#.#.#.#.#######.#.###.#.#.###.#.#######.#.#.#####.#########.#.#####  ",
"  #.....#.....#.............#.#.#...#.#...#.#.....#...#...#.#.......#.....#.#.#...#.#...#.#...#...........#.#.#.#.#...#.#.....#  ",
"  #.#########.#######.#####.#.#.###.#.###########.#####.###.#.#########.#.#.#######.###.#.#.###.###.#####.#.###.#.#.#####.#.#.#  ",
"  #.......#.....#...#.#.#.......#.............#...#.#...#...#.......#.#.#...#.........#...#...#.#.#...#...............#.#.#.#.#  ",
"  #.#####.###.#####.###.#.#.#.#.###########.###.#.#.#.#.#.#####.#####.#.#######.###.#####.#.###.#.#######.###.#.###.###.#.#.###  ",
"  #.#...#.............#...#.#.#.#...#.....#.#...#.#...#.....#.#.#.#...........#.#.#.#...#.#...........#.#...#.#...#.....#.#...#  ",
"  ###.###.#####.###.#.#.#######.#.#.#.#.#.#.#.#####.#.#######.#.#.###.#####.#####.#.#.#####.#####.#####.#####.#.###.#.#.###.###  ",
"  #.......#...#.#...#...#.......#.#...#.#.#.#.....#.#.#.....#...#.#.#...#...#...#.....#.......#.......#.....#.#.#...#.#.#.....#  ",
"  #.###.#.###.#.#######.#.###.#.#####.#.###.#.#######.###.#.#.###.#.###.###.###.###.#######.#####.#######.#.#.###.#.#######.###  ",
"  #...#.#.#.......#...#.#.#.#.#.......#.#...#.......#.#...#.#.....#...#...#.#.......#...#.#.....#.........#.#...#.#.......#...#  ",
"  #.#####.#.#.#######.#####.###.#.#.#.#.#.###.#######.#.###.#####.###.#####.#.#########.#.#.#########.#######.#.###.###.###.###  ",
"  #.#...#.#.#.....#.#...........#.#.#.#...#...#...#.....#.#...#...#.......#.#...#.....#...#.....#.#.......#...#.#.#.#.#.#.....#  ",
"  #.###.#######.###.#.###.#.#####.#.#.#######.#.#########.#.#####.###.###.#.###.#.#.#.#.#.#.#.###.#.#.#.#.###.###.#.#.#######.#  ",
"  #.#.............#...#...#.....#.#.#.......#.......#...........#...#...#...#.....#.#.#.#...#...#...#.#.#.#.....#...........#.#  ",
"  #####################################.#######.#######.#########.###.#######.#####.###.#.#####################################  ",
"                                       N       D       M         Q   K       O     Z   I W                                       ",
"                                       L       S       Y         D   W       H     Z   M H                                       "]


wall="#"
path="."
empty=" "

#all the portal positions
portalPositions={}

#mazemap as positions
masterMaze={}

def addPortal(portal,x,y,wallSide):
    if portal not in portalPositions:
        portalPositions[portal]=[(x,y,wallSide)]
    else:
        newList=portalPositions[portal]
        newList.append((x,y,wallSide))
        portalPositions[portal]=newList

for y in range(len(master)):
    for x in range(len(master[y])):
        currentChar=master[y][x]
        masterMaze[(x,y)]=currentChar
        if x==2:
            if master[y][1] not in [wall,path,empty]:
                portal=master[y][0]+master[y][1]
                addPortal(portal,x,y,'out')
                masterMaze[(x,y)]=portal
        if x==126:
            if master[y][127] not in [wall,path,empty]:
                portal=master[y][127]+master[y][128]
                addPortal(portal,x,y,'out')
                masterMaze[(x,y)]=portal
        if x==34:
            if master[y][35] not in [wall,path,empty]:
                portal=master[y][35]+master[y][36]
                addPortal(portal,x,y,'in')
                masterMaze[(x,y)]=portal
        if x==94:
            if master[y][93] not in [wall,path,empty]:
                portal=master[y][92]+master[y][93]
                addPortal(portal,x,y,'in')
                masterMaze[(x,y)]=portal
        if y==2:
            if master[1][x] not in [wall,path,empty]:
                portal=master[0][x]+master[1][x]
                addPortal(portal,x,y,'out')
                masterMaze[(x,y)]=portal
        if y==120:
            if master[121][x] not in [wall,path,empty]:
                portal=master[121][x]+master[122][x]
                addPortal(portal,x,y,'out')
                masterMaze[(x,y)]=portal
        if y==34:
            if master[35][x] not in [wall,path,empty]:
                portal=master[35][x]+master[36][x]
                addPortal(portal,x,y,'in')
                masterMaze[(x,y)]=portal
        if y==88:
            if master[87][x] not in [wall,path,empty]:
                portal=master[86][x]+master[87][x]
                addPortal(portal,x,y,'in')
                masterMaze[(x,y)]=portal

#print(portalPositions)

startPosition=portalPositions['AA'][0]
endPosition=portalPositions['ZZ'][0]
print(portalPositions)

pathLengths={}
def createNewMaze():
    newMaze={}
    for i in range(129):
        for j in range(123):
            newMaze[(i,j)]=0
    return newMaze

def findPaths(starting,currentPosition,length,visitedMaze,graph,pathLengths):
    visitedMaze[currentPosition]=1

    up=(currentPosition[0],currentPosition[1]-1)
    down=(currentPosition[0],currentPosition[1]+1)
    left=(currentPosition[0]-1,currentPosition[1])
    right=(currentPosition[0]+1,currentPosition[1])

    length=length+1
    if (up not in graph):
        graph[up]=length
    if (down not in graph):
        graph[down]=length
    if (left not in graph):
        graph[left]=length
    if (right not in graph):
        graph[right]=length

    if(visitedMaze[up]==0 and (masterMaze[up]==path or masterMaze[up] in portalPositions)):
        if (masterMaze[up] in portalPositions):
            if(masterMaze[up],starting) not in pathLengths:
                pathLengths[(starting,masterMaze[up])]=graph[up]
        findPaths(starting,up, graph[up], visitedMaze,graph,pathLengths)
    
    if(visitedMaze[down]==0 and (masterMaze[down]==path or masterMaze[down] in portalPositions)):
        if (masterMaze[down] in portalPositions):
            if(masterMaze[down],starting) not in pathLengths:
                pathLengths[(starting,masterMaze[down])]=graph[down]
        findPaths(starting,down, graph[down], visitedMaze,graph,pathLengths)
    
    if(visitedMaze[left]==0 and (masterMaze[left]==path or masterMaze[left] in portalPositions)):
        if (masterMaze[left] in portalPositions):
            if(masterMaze[left],starting) not in pathLengths:
                pathLengths[(starting,masterMaze[left])]=graph[left]
        findPaths(starting,left, graph[left], visitedMaze,graph,pathLengths)
    
    if(visitedMaze[right]==0 and (masterMaze[right]==path or masterMaze[right] in portalPositions)):
        if (masterMaze[right] in portalPositions):            
            if(masterMaze[right],starting) not in pathLengths:
                pathLengths[(starting,masterMaze[right])]=graph[right]
        findPaths(starting,right, graph[right], visitedMaze,graph,pathLengths)

for portal in portalPositions:
    for item in portalPositions[portal]:
        graph={}
        visitedMaze=createNewMaze()
        findPaths(portal,item,0,visitedMaze,graph,pathLengths)

print(pathLengths)

def djikstra(startingNode):
    dist={}
    prev={}

    Q=[]
    for portal in portalPositions:
        dist[portal]=2000000
        prev[portal]=''
        Q.append(portal)
    dist[startingNode]=0
    print(Q)

    while(len(Q)>0):
        
        minDist=1000000
        for x in Q:
            if dist[x]<minDist:
                u=x
                minDist=dist[x]
        for neighbor in pathLengths:
            if neighbor[1]==u and neighbor[0] in Q:
                newDist = dist[u]+pathLengths[neighbor]
                if newDist<dist[neighbor[0]]:
                    dist[neighbor[0]]=newDist
                    prev[neighbor[0]]=u
                    print(neighbor[0],u)
            elif neighbor[0]==u and neighbor[1] in Q:
                newDist = dist[u]+pathLengths[neighbor]
                if newDist<dist[neighbor[1]]:
                    dist[neighbor[1]]=newDist
                    prev[neighbor[1]]=u
                    print(u,neighbor[1])

        Q.remove(u)
    return dist, prev

distanceList, previousList = djikstra('AA')
def findShortestPath(endNode):
    path=[]
    currentNode=endNode
    while(currentNode!=''):
        path.append(currentNode)
        currentNode=previousList[currentNode]
    return path

print(distanceList)
print(previousList)
sp=findShortestPath('ZZ')
print(distanceList['ZZ']+len(sp)-2)
#696

#Part 2
